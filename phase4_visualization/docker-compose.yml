# Phase 4 Docker Compose Configuration
# Services: Neo4j, Backend (FastAPI), Frontend (React + Nginx)

version: '3.9'

services:
  # === Neo4j Database ===
  neo4j:
    image: neo4j:5.15-community
    container_name: phase4_neo4j
    hostname: neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP UI
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password123
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:7474 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    networks:
      - phase4_network

  # === Backend API (FastAPI) ===
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
      target: production
    container_name: phase4_backend
    hostname: backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # API設定
      - API_TITLE=Phase 4 Visualization API
      - API_VERSION=4.0.0
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_DEBUG=false

      # Neo4j接続設定
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password123

      # CORS設定
      - CORS_ORIGINS=http://localhost:5173,http://localhost:80,http://frontend

      # ログ設定
      - LOG_LEVEL=INFO
    depends_on:
      neo4j:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import httpx; httpx.get(\"http://localhost:8000/health\")' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - phase4_network
    volumes:
      # 開発時のホットリロード用（本番環境では削除）
      - ./backend:/app/backend:ro

  # === Frontend (React + Vite + Nginx) ===
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: phase4_frontend
    hostname: frontend
    restart: unless-stopped
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost/health || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - phase4_network

# === Volumes ===
volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

# === Networks ===
networks:
  phase4_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
