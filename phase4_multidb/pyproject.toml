[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multidb-analyzer"
version = "1.0.0"
description = "Multi-database code analyzer for detecting anti-patterns and performance issues"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Phase 6 Team", email = "noreply@example.com"}
]
keywords = [
    "static-analysis",
    "code-quality",
    "elasticsearch",
    "mysql",
    "mongodb",
    "redis",
    "database",
    "performance"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]

dependencies = [
    "javalang==0.13.0",
    "sqlparse==0.4.4",
    "elasticsearch-dsl==8.11.0",
    "elasticsearch==8.11.1",
    "click==8.1.7",
    "rich==13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-cov==4.1.0",
    "pytest-asyncio==0.21.1",
    "black==23.12.1",
    "ruff==0.1.9",
    "mypy==1.8.0",
]

llm = [
    "anthropic==0.8.1",
    "langchain==0.1.0",
]

[project.urls]
Homepage = "https://github.com/example/multidb-analyzer"
Documentation = "https://multidb-analyzer.readthedocs.io"
Repository = "https://github.com/example/multidb-analyzer"
Issues = "https://github.com/example/multidb-analyzer/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["multidb_analyzer*"]
exclude = ["tests*"]

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/**" = ["F401", "F811"]  # Allow unused imports and redefinitions in tests

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = "javalang.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "elasticsearch_dsl.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sqlparse.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["src"]
